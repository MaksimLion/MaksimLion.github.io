$(document).ready(function () {

    (function formsInit() {
        $("#form").submit(function () {
            var form_data = $(this).serialize();
            $.ajax({
                type: "POST",
                url: "sendFull.php",
                data: form_data
            }).done(function () {
                $('.main').addClass('blur');
                $('.complete-popup').addClass('popup--active');
                $('.popup-background').addClass('popup-background--active');
            });
            $('#form').find('input').val('');
            return false;
        });

        $('.offer-popup__form').submit(function () {
            $('.offer-popup').removeClass('popup--active');
            $('.main').removeClass('blur');
            var form_data = $(this).serialize();
            $.ajax({
                type: "POST",
                url: "sendType.php",
                data: form_data
            }).done(function () {
                $('.main').addClass('blur');
                $('.complete-popup').addClass('popup--active');
            });
            $('.offer-popup__form').find("input").val("");
            return false;
        });

        $('.prices__item-button').click(function () {
            $('.popup-background').addClass('popup-background--active');
            $('#tariffType').val($(this).data('type'));
            $('.main').addClass('blur');
            $('.offer-popup').addClass('popup--active');
        });

        $('.offer-popup__close, .complete-popup__close, .popup-background').click(function () {
            $('.offer-popup, .complete-popup').removeClass('popup--active');
            $('.popup-background').removeClass('popup-background--active');
            $('.main').removeClass('blur');
        });
    })();

    (function onlyDesktop() {
        if (!$.browser.mobile) {
            var wrapper = $('#parallax');
            var phone = $('.header__phone');

            wrapper.on('mousemove', function (e) {
                var pageX = e.clientX,
                    pageY = e.clientY;
                phone.css('transform', 'translateX(' + pageX / 100 + '%) translateY(' + pageY / 200 + '%)');
                // wrapper.style = 'background-position:' + pageX / 200 + 'px center';
            });
            if ($(window).width() > 1100) {
                $('.header__title-text').addClass('ml13');
                $('.ml13').each(function () {
                    $(this).html($(this).text().replace(/([^\s\\])/g, "<span class='letter'>$&</span>"));
                });
                setTimeout(function () {
                    $('.header__title').css({
                        opacity: 1
                    });
                    anime.timeline({loop: false})
                        .add({
                            targets: '.ml13 .letter',
                            translateY: [100, 0],
                            translateZ: 0,
                            opacity: [0, 1],
                            easing: "easeOutExpo",
                            duration: 2000,
                            delay: function (el, i) {
                                return 300 + 30 * i;
                            }
                        });
                }, 100);
            } else {
                $('.header__title').css({
                    opacity: 1
                });
            }
            $('.result__item').animated('fadeInUp', 'fadeOutDown', count);
            $('.our-work__title-text').animated('fadeInUp', 'fadeOutDown');
            $('.our-work__item--left').animated('fadeInLeft', 'fadeOutLeft');
            $('.our-work__item--right').animated('fadeInRight', 'fadeOutRight');
            $('.prices__title').animated('fadeInUp', 'fadeOutDown');
            $('.result__header').animated('fadeInLeft', 'fadeOutLeft');
            $('.result__header-line').animated('fadeInRight', 'fadeOutRight');
            $('.about__img').animated('fadeIn', 'fadeOut');
            $('.contacts__header').animated('fadeInUp', 'fadeOutDown');
        } else {
            $('.header__title').css({
                opacity: 1
            });
        }
        function count(element, time) {
            var item = element.find('.item-label__count');
            // setTimeout(function () {
            item.prop('Counter', 0).animate({
                Counter: item.data('count')
            }, {
                duration: time,
                easing: 'swing',
                step: function (now) {
                    item.text(Math.ceil(now));
                }
            });
        }
    })();

    (function swiperInit() {
        $('.clients__iphone-control--before').click(function () {
            $('.clients__iphone-img--after').fadeOut();
            $('.clients__iphone-img--before').fadeIn();
        });

        $('.clients__iphone-control--after').click(function () {
            $('.clients__iphone-img--before').fadeOut();
            $('.clients__iphone-img--after').fadeIn();
        });

        var clientsSlider = new Swiper('.clients__slider', {
            slidesPerView: 1,
            spaceBetween: 30,
            paginationClickable: true,
            loop: true,
            nextButton: '.clients__swipe-arrow--right',
            prevButton: '.clients__swipe-arrow--left',
            onInit: function () {
                if (!$.browser.mobile) {
                    $('.about__title').animated('fadeInDown', 'fadeOutUp');
                    $('.about__description-text').animated('fadeInLeft', 'fadeOutLeft');
                }
            }
        });
    })();

    (function menuInit() {
        $('.header__menu-link').click(function () {
            $('.header__menu').removeClass('header__menu--active');
            $('.hamburger').removeClass('hamburger--open');
        });

        $('.hamburger').click(function () {
            $(this).toggleClass('hamburger--open');
            $('.header__menu').toggleClass('header__menu--active');
        });

        $('.header__menu-link, .header__scroll-link, .header__button').click(function (event) {
            event.preventDefault();
            var section = $(this).attr('href');
            $("body,html").animate({
                scrollTop: $(section).offset().top
            }, 1000)
        });
    })();

    (function circlesInit() {
        var clientsWrapper = $('.clients__container');
        var circle1 = $('.clients__circle--1');
        var circle2 = $('.clients__circle--2');
        var circle3 = $('.clients__circle--3');
        var circle4 = $('.clients__circle--4');
        var circle5 = $('.clients__circle--5');
        var circle6 = $('.clients__circle--6');

        clientsWrapper.on('mousemove', function (e) {
            var pageX = e.clientX,
                pageY = e.clientY;
            circle1.css('transform', 'translateX(' + pageX / 80 + '%) translateY(' + pageY / 50 + '%)');
            circle2.css('transform', 'translateX(' + pageX / 60 + '%) translateY(' + pageY / 50 + '%)');
            circle3.css('transform', 'translateX(' + pageX / 40 + '%) translateY(' + pageY / 50 + '%)');
            circle4.css('transform', 'translateX(' + pageX / 60 + '%) translateY(' + pageY / 50 + '%)');
            circle5.css('transform', 'translateX(' + pageX / 20 + '%) translateY(' + pageY / 50 + '%)');
            circle6.css('transform', 'translateX(' + pageX / 40 + '%) translateY(' + pageY / 50 + '%)');
        });

        function drawCircles() {
            var width = $('.clients__title').width() + 50,
                height = $('.clients').height() + 20;

            var nodes = d3.range(50).map(function () {
                    return {radius: Math.random() * 35 + 4};
                }),
                root = nodes[0],
                color1 = d3.scale.category10();
            var color = d3.scale.linear().domain([1, 100])
                .interpolate(d3.interpolateHcl)
                .range([d3.rgb("#e86e57"), d3.rgb('#aa3b94')]);

            root.radius = 0;
            root.fixed = true;

            var force = d3.layout.force()
                .gravity(0.02)
                .charge(function (d, i) {
                    return i ? 0 : -1000;
                })
                .nodes(nodes)
                .size([width, height]);

            force.start();

            var svg = d3.select(".clients__title").append("svg")
                .attr("width", width)
                .attr("height", height);

            $('svg').addClass('svg-balls');

            svg.selectAll("circle")
                .data(nodes.slice(1))
                .enter().append("circle")
                .attr("r", function (d) {
                    return d.radius - 5;
                })
                .style("fill", function (d, i) {
                    return color(i);
                });

            force.on("tick", function (e) {
                var q = d3.geom.quadtree(nodes),
                    i = 0,
                    n = nodes.length;

                while (++i < n) q.visit(collide(nodes[i], width));

                svg.selectAll("circle")
                    .attr("cx", function (d) {
                        return d.x;
                    })
                    .attr("cy", function (d) {
                        return d.y;
                    });
            });

            svg.on("mousemove", function () {
                var p1 = d3.mouse(this);
                root.px = p1[0];
                root.py = p1[1];
                force.resume();
            });
        }

        $(window).resize(function () {
            $('.svg-balls').attr("width", $('.clients__title').width() + 50)
                .attr("height", $('.clients').height() + 20);
        });

        drawCircles();

        function collide(node, width) {
            var r = node.radius + width / 2,
                nx1 = node.x - r,
                nx2 = node.x + r,
                ny1 = node.y - r,
                ny2 = node.y + r;
            return function (quad, x1, y1, x2, y2) {
                if (quad.point && (quad.point !== node)) {
                    var x = node.x - quad.point.x,
                        y = node.y - quad.point.y,
                        l = Math.sqrt(x * x + y * y),
                        r = node.radius + quad.point.radius;
                    if (l < r) {
                        l = (l - r) / l * .5;
                        node.x -= x *= l;
                        node.y -= y *= l;
                        quad.point.x += x;
                        quad.point.y += y;
                    }
                }
                return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
            };
        }
    })();

    (function wavesInit() {
        var wavesHeight = $('#parallax').outerHeight();
        var waves = new SineWaves({
            el: document.getElementById('waves'),
            speed: 4,
            rotate: 90,
            width: wavesHeight,
            height: function () {
                return wavesHeight;
            },
            ease: 'SineInOut',
            wavesWidth: '100%',
            wavesHeight: wavesHeight,
            waves: [
                {
                    timeModifier: 4,
                    lineWidth: 1,
                    amplitude: -25,
                    wavelength: wavesHeight
                },
                {
                    timeModifier: 2,
                    lineWidth: 2,
                    amplitude: -50,
                    wavelength: wavesHeight
                },
                {
                    timeModifier: 1,
                    lineWidth: 1,
                    amplitude: -100,
                    wavelength: wavesHeight
                },
                {
                    timeModifier: 0.5,
                    lineWidth: 1,
                    amplitude: -200,
                    wavelength: wavesHeight
                },
                {
                    timeModifier: 0.25,
                    lineWidth: 2,
                    amplitude: -250,
                    wavelength: wavesHeight
                },
                {
                    timeModifier: 0.85,
                    lineWidth: 2,
                    amplitude: -250,
                    wavelength: wavesHeight
                },
                {
                    timeModifier: 0.75,
                    lineWidth: 2,
                    amplitude: -250,
                    wavelength: wavesHeight
                }
            ],
            // Called on window resize
            resizeEvent: function () {
                var gradient = this.ctx.createLinearGradient(0, 0, this.width, 0);
                gradient.addColorStop(0, "rgba(23, 210, 168, 0.2)");
                gradient.addColorStop(0.5, "rgba(255, 255, 255, 0.5)");
                gradient.addColorStop(1, "rgba(23, 210, 168, 0.2)");

                var index = -1;
                var length = this.waves.length;
                while (++index < length) {
                    this.waves[index].strokeStyle = 'rgba(255, 255, 255, 0.5)';
                }

                // Clean Up
                index = void 0;
                length = void 0;
                gradient = void 0;
            }
        });
    })();

});